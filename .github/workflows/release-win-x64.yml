name: Release - Windows x64

on:
  pull_request:
    branches: [ main ]
    types: [ closed ]

# Sets permissions to allow version tag
permissions:
  contents: write

jobs:
  build:
    if: ${{ github.event.pull_request.merged == true && startsWith(github.event.pull_request.head.ref, 'release/') }}

    runs-on: windows-latest

    env:
      SCCACHE_GHA_ENABLED: "true"
      RUSTC_WRAPPER: "sccache"

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Detect Flutter Version
      uses: kuhnroyal/flutter-fvm-config-action@v2

    - name: Setup Flutter
      uses: hrishikesh-kadam/setup-flutter@v1
      with:
        ref: ${{ env.FLUTTER_VERSION }}
        setFlutterRootPath: 'true'
        addPubCacheBinToPath: 'true'
        flutterPrecache: '--windows'

    - name: Setup MSYS2
      uses: msys2/setup-msys2@v2
      with:
        msystem: MINGW64
        update: true
        install: mingw-w64-x86_64-libgphoto2 mingw-w64-x86_64-pkg-config mingw-w64-x86_64-gcc mingw-w64-x86_64-clang mingw-w64-x86_64-gexiv2 mingw-w64-x86_64-curl-winssl
        path-type: inherit
        release: true

    - name: Install minimal Rust (MSVC target)
      uses: dtolnay/rust-toolchain@master
      with:
        target: x86_64-pc-windows-msvc
        toolchain: stable-gnu

    - name: Install minimal Rust (GNU target)
      uses: dtolnay/rust-toolchain@master
      with:
        target: x86_64-pc-windows-gnu
        toolchain: stable-gnu

    - name: Setup Rust cache
      uses: Swatinem/rust-cache@v2
      with:
        workspaces: |
          rust -> ../build/windows/x64/plugins/rust_lib_momento_booth/cargokit_build
          rust -> target

    - name: Setup sccache-cache
      uses: mozilla-actions/sccache-action@v0.0.4

    - name: Install cargo-expand
      uses: baptiste0928/cargo-install@v3
      with:
        crate: cargo-expand
        args: --target x86_64-pc-windows-msvc
      
    - name: Install flutter_rust_bridge_codegen
      uses: baptiste0928/cargo-install@v3
      with:
        crate: flutter_rust_bridge_codegen
        version: "2.0.0-dev.37"
        args: --target x86_64-pc-windows-msvc

    # - name: Install flutter_distributor
    #   run: dart pub global activate flutter_distributor

    - name: Install Dependencies
      run: flutter packages get

    - name: Generation l10n
      run: flutter gen-l10n

    - name: Generate Dart-to-Rust bridging code
      run: msys2 -c 'flutter_rust_bridge_codegen generate'

    - name: Code generation
      run: flutter pub run build_runner build --delete-conflicting-outputs

    - name: Flutter Analyze
      run: flutter analyze

    # Extract version from branch name
    - name: Extract Release version
      id: extract_release_version
      shell: bash
      run: |
        release_version=$(echo ${{ github.event.pull_request.head.ref }} | cut -d/ -f2)
        echo "release_version=$release_version" >> $GITHUB_OUTPUT
        echo "distributor_version=${release_version/-/+}" >> $GITHUB_OUTPUT

    - name: Build Project
      run: msys2 -c 'flutter build windows -v --release --dart-define SENTRY_DSN=${{ secrets.SENTRY_DSN }} --dart-define SENTRY_ENVIRONMENT=Production --dart-define SENTRY_RELEASE=${{ steps.extract_release_version.outputs.distributor_version }} --dart-define IOLIBS=libgphoto2_iolibs --dart-define CAMLIBS=libgphoto2_camlibs'
    
    - name: Bundle DLL dependencies of the helper library
      shell: pwsh
      run: |
        $Env:MINGW_BUNDLEDLLS_SEARCH_PATH = ((msys2 -c 'cygpath -m /') + "mingw64/bin").Replace("/", "\")
        $bundle_script = curl https://raw.githubusercontent.com/h3x4d3c1m4l/mingw-bundledlls/master/mingw-bundledlls
        echo $bundle_script | python - --copy build\windows\x64\runner\Release\rust_lib_momento_booth.dll

    - name: Bundle libgphoto2 additional libs
      shell: pwsh
      run: |
        $Env:MSYS2_ROOT = msys2 -c 'cygpath -m /'
        mkdir build\windows\x64\runner\Release\libgphoto2_iolibs
        cp $Env:MSYS2_ROOT\mingw64\lib\libgphoto2_port\*\*.dll build\windows\x64\runner\Release\libgphoto2_iolibs
        mkdir build\windows\x64\runner\Release\libgphoto2_camlibs
        cp $Env:MSYS2_ROOT\mingw64\lib\libgphoto2\*\*.dll build\windows\x64\runner\Release\libgphoto2_camlibs

    - name: Bundle dependencies of libgphoto2 additional libs
      shell: pwsh
      run: |
        $Env:MINGW_BUNDLEDLLS_SEARCH_PATH = ((msys2 -c 'cygpath -m /') + "mingw64/bin").Replace("/", "\")
        $bundle_script = curl https://raw.githubusercontent.com/h3x4d3c1m4l/mingw-bundledlls/master/mingw-bundledlls

        cd build\windows\x64\runner\Release\
        $lib_folders = @('libgphoto2_iolibs', 'libgphoto2_camlibs')
        foreach ( $folder in $lib_folders )
        {
          $libs = ls $folder
          foreach ( $lib in $libs )
          {
            echo $bundle_script | python - --copy $lib.fullName
          }

          # Now move all libraries to the same folder as the executable (except iolibs and camlibs themselves)
          $files = ls $folder
          foreach ( $file in $files )
          {
            if ($libs.Name -notcontains $file.Name) {
              Move-Item -Path $file -Destination $file.Directory.Parent.FullName -force
            }
          }
        }

    # Pack
    - name: Archive Release
      uses: thedoctor0/zip-release@0.7.6
      with:
        type: 'zip'
        directory: build/windows/x64/runner/Release
        filename: 'MomentoBooth-${{ steps.extract_release_version.outputs.release_version }}-Win-x64.zip'

    # Create GitHub release
    - name: Create GitHub Release
      uses: ncipollo/release-action@v1
      with:
        allowUpdates: true
        prerelease: true
        replacesArtifacts: true
        tag: ${{ steps.extract_release_version.outputs.release_version }}
        artifacts: "build/windows/x64/runner/Release/MomentoBooth-${{ steps.extract_release_version.outputs.release_version }}-Win-x64.zip"
