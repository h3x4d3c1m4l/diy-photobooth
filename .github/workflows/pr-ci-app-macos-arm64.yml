name: PR CI App - macOS ARM64

on:
  pull_request:
    branches: [ main ]
    paths-ignore: [ documentation/**, .github/workflows/pr-ci-documentation.yml, .github/workflows/deploy-documentation.yml, README.md ]
    types: [opened, synchronize, reopened, ready_for_review]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build:
    permissions:
      contents: write
      pull-requests: write

    if: ${{ startsWith(github.event.pull_request.head.ref, 'release/') != true && github.event.pull_request.draft != true }}

    runs-on: macos-latest
    timeout-minutes: 30

    env:
      SCCACHE_GHA_ENABLED: "true"
      RUSTC_WRAPPER: "sccache"

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.pull_request.head.ref }}

    - name: Install build dependencies
      run: brew install ruby pkg-config

    - name: Download and unpack Homebrew libraries
      run: |
        mkdir build
        cd build
        ../macos/ci_download_deps.sh -a arm64_ventura,ventura libgphoto2 gexiv2
        ../macos/ci_adapt_pkgconf_dirs.sh ventura/lib/pkgconfig
        ../macos/ci_adapt_pkgconf_dirs.sh arm64_ventura/lib/pkgconfig

    - uses: webfactory/ssh-agent@v0.9.0
      with:
        ssh-private-key: ${{ secrets.MATCH_CERTIFICATES_GIT_ACCESS_TOKEN }}

    - name: Install keys, certificates and profiles
      env:
        MATCH_CERTIFICATES_GIT_URL: ${{ secrets.MATCH_CERTIFICATES_GIT_URL }}
        MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
        APP_STORE_CONNECT_KEY_ID: ${{ secrets.APP_STORE_CONNECT_KEY_ID }}
        APP_STORE_CONNECT_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_ISSUER_ID }}
        APP_STORE_CONNECT_KEY: ${{ secrets.APP_STORE_CONNECT_KEY }}
      run: |
        PATH=/opt/homebrew/opt/ruby/bin:$HOME/.gem:$PATH
        gem install bundler --user-install
        bundle install
        bundle exec fastlane ci_install_release_cert_using_api

    - name: Detect Flutter Version
      uses: kuhnroyal/flutter-fvm-config-action@v3

    - name: Setup Flutter
      uses: hrishikesh-kadam/setup-flutter@v1
      with:
        ref: ${{ env.FLUTTER_VERSION }}
        setFlutterRootPath: 'true'
        addPubCacheBinToPath: 'true'
        flutterPrecache: '--macos'

    - name: Disable Flutter analytics and CLI animations
      run: flutter config --no-analytics --no-cli-animations

    - name: Install minimal Rust
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: stable
        target: aarch64-apple-darwin

    - name: Setup Rust cache
      uses: Swatinem/rust-cache@v2
      with:
        workspaces: |
          rust -> ../build/macos/Build/Intermediates.noindex/Pods.build/Release/rust_lib_momento_booth.build
          rust -> target
      
    - name: Setup sccache-cache
      uses: mozilla-actions/sccache-action@v0.0.6

    - name: Install cargo-expand
      uses: baptiste0928/cargo-install@v3
      with:
        crate: cargo-expand

    - name: Install flutter_rust_bridge_codegen
      uses: baptiste0928/cargo-install@v3
      with:
        crate: flutter_rust_bridge_codegen
        version: "2.4.0"

    - name: Install dependencies
      run: flutter pub get --enforce-lockfile

    - name: Generation l10n
      run: flutter gen-l10n

    - name: Generate Dart-to-Rust bridging code
      run: PKG_CONFIG_PATH=$(realpath build/ventura/lib/pkgconfig):$(realpath build/arm64_ventura/lib/pkgconfig) flutter_rust_bridge_codegen generate

    - name: Flutter analyze
      run: flutter analyze

    - name: Build project
      run: |
        rm macos/Podfile.lock
        PKG_CONFIG_PATH=$(realpath build/arm64_ventura/lib/pkgconfig) FLUTTER_XCODE_ARCHS=arm64 flutter build macos -v --dart-define SENTRY_DSN=${{ secrets.SENTRY_DSN }} --dart-define SENTRY_ENVIRONMENT=Production --dart-define SENTRY_RELEASE=${{ steps.extract_release_version.outputs.distributor_version }} --dart-define FLUTTER_VERSION=${{ env.FLUTTER_VERSION }}
        #PKG_CONFIG_PATH=$(realpath build/ventura/lib/pkgconfig) FLUTTER_XCODE_ARCHS=x86_64 flutter build macos -v --dart-define SENTRY_DSN=${{ secrets.SENTRY_DSN }} --dart-define SENTRY_ENVIRONMENT=Production --dart-define SENTRY_RELEASE=${{ steps.extract_release_version.outputs.distributor_version }} --dart-define FLUTTER_VERSION=${{ env.FLUTTER_VERSION }}

    - name: Commit changes to macOS build files and create PR
      id: cpr
      uses: peter-evans/create-pull-request@v7
      with:
        add-paths: macos
        commit-message: Update macOS build files
        title: Update macOS build files
        body: This PR is created by the macOS CI pipeline, to help keeping the macOS build working.
        branch: chore/update-macos-build-files

    - name: Add comment to remind of created PR
      if: ${{ steps.cpr.outputs.pull-request-number }}
      uses: thollander/actions-comment-pull-request@v2
      with:
        message: I created PR \#${{ steps.cpr.outputs.pull-request-number }} for you to update the macOS build.
